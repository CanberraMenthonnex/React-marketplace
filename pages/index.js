import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useState, useEffect} from 'react';


import Card from '../components/card/Card';

export default function Home() {

    const [count, setCount] = useState(0);
    const [todoList, setTodoList] = useState([]);
    const [addTodo, setAddTodo] = useState("");
    const [deleteTodo, setDeleteValue] = useState("");
    const [editabledTodo, setEditabledTodo] = useState(null);

    const editTask = (item, index) => {
        setEditabledTodo(index);
    }

    const handleChange = e => {

        let newTodoList = [...todoList];
        newTodoList[editabledTodo] = e.target.value;
        setTodoList(newTodoList);
    }

    useEffect(() => {
        count >= 1 && setColor('#222')
    }, [count]);

    useEffect(() => {
        localStorage.setItem('todos', todoList)
        return () => {
            localStorage.clear()
        }
    }, [todoList]);


    const CardData = [
        {
            title : "Pancake Squad #1",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-1265-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "1 324",
        },
        {
            title : "Pancake Squad #2",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-1729-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "1 342",
        },
        {
            title : "Pancake Squad #3",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-5504-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : " 803",
        },
        {
            title : "Pancake Squad #4",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-6645-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "342",
        },
        {
            title : "Pancake Squad #5",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-3853-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "1 234",
        },
        {
            title : "Pancake Squad #6",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-10-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : " 803",
        },
        {
            title : "Pancake Squad #7",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-95-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "342",
        },
        {
            title : "Pancake Squad #8",
            imgSrc : "https://static-nft.pancakeswap.com/mainnet/0x0a8901b0E25DEb55A87524f0cC164E9644020EBA/pancake-squad-39-1000.png",
            description : "Adress: 0x0a8901b0E25...",
            price : "1 234",
        },
    ]

  return (
    <div className={styles.container}>
      <Head>
        <title>Marketplace</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>      
        
        <h1 className= {styles.mainH1}>Welcome to the marketplace</h1>
    
        
        <div className={styles.marketplaceContent}>
            {
                CardData.map((nft, key) => {
                    return <Card 
                    title = {nft.title} 
                    description = {nft.description} 
                    price = {nft.price} 
                    srcImg = {nft.imgSrc}
                    key = {key}
                    />
                })
            }
        </div>

        </main>

        
        {/* <p>count : {count}</p>
        <button onClick={() => setCount(prev => prev + 1)}>Ajouter</button>

        <br/>

        <input onChange={(e) => setAddTodo(addTodo => e.target.value)}></input>
        <button onClick={() => setTodoList(todoList => [...todoList, addTodo])}>Add todo</button>

        { todoList.length > 0 && (
            todoList.map((todo,i) =>{
                return(
                    <div key = {i}>

                        <input type = "text" onChange={(e) => handleChange(e)} value={todo} disabled={editabledTodo === i ? false :true}/>

                        <button onClick={() => editTask(todo,i)}>Edit</button>
                        <button onClick={()=>setTodoList(prevArray => prevArray.filter((item, index) => index !== i))}>Delete</button>
                    </div>
                )
                
            })
        )} */}

      

    </div>
  )
}



